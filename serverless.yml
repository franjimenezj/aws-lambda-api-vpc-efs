service: aws-lambda-api-service

plugins:
    - serverless-iam-roles-per-function

frameworkVersion: '1.83.1'

# defaultAwsProperties:
#     - Type: AWS::Lambda::Function
#       Properties:
#         FileSystemConfigs:
#           - Arn: 'arn:aws:elasticfilesystem:${self:provider.region}:#{AWS::AccountId}:access-point/${self:custom.efsAccessPoint}'
#             LocalMountPath: '${self:custom.LocalMountPath}'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  profile: personal
  region: eu-west-1

custom:
  stage: ${opt:stage, self:provider.stage}
  localMountPath: ${file(./config/${self:custom.stage}.json):localMountPath}
  accessPointMountPath: ${file(./config/${self:custom.stage}.json):accessPointMountPath}

functions:
  hello:
    handler: src/lambda/handler.hello
    iamRoleStatementsName: ${self:service}-hello-${self:custom.stage}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - ec2:CreateNetworkInterface
          - ec2:DescribeNetworkInterfaces
          - ec2:DetachNetworkInterface
          - ec2:DeleteNetworkInterface
        Resource: '*'
    events:
      - http:
          method: get
          path: /helloworld
resources:
    - ${file(resources/vpc-efs.yml)}
  